//
//  GameScene.swift
//  Project17
//
//  Created by NTTdata on 2020/04/22.
//  Copyright © 2020 NTTdata. All rights reserved.
//

import SpriteKit

class GameScene: SKScene, SKPhysicsContactDelegate {
    var starfield: SKEmitterNode!
    var player: SKSpriteNode!
    var scoreLabel: SKLabelNode!
    var gameOverLabel: SKLabelNode!


    let possibleEnemies = ["ball","hammer","tv"]
    var isGameOver = false
    var gamerTimer: Timer?

    var score = 0 {
        didSet{
            scoreLabel.text = "Score: (score)"
        }
    }

    override func didMove(to view: SKView) {
        backgroundColor = .black

        starfield = SKEmitterNode(fileNamed: "starfield")
        starfield.position = CGPoint(x: 1024, y: 384)
        starfield.advanceSimulationTime(10)
        addChild(starfield)
        starfield.zPosition = -1

        player = SKSpriteNode(imageNamed: "player")
        player.position = CGPoint(x: 100, y: 384)
        player.physicsBody = SKPhysicsBody(texture: player.texture!, size: player!.size)
        player.physicsBody?.contactTestBitMask = 1
        addChild(player)

        scoreLabel = SKLabelNode(fileNamed: "Chalkduster")
        scoreLabel.position = CGPoint(x: 16, y: 16)
        scoreLabel.horizontalAlignmentMode = .left
        addChild(scoreLabel)

        physicsWorld.gravity = CGVector(dx: 0, dy: 0)
        physicsWorld.contactDelegate = self

        gamerTimer = Timer.scheduledTimer(timeInterval: 0.35, target: self, selector: #selector(createEnemy), userInfo: nil, repeats: true)

    }

    override func update( currentTime: TimeInterval) {
        for node in children {
            if node.position.x < -300 {
                node.removeFromParent()
            }
        }

        if !isGameOver {
            score += 1
        }else{
            gameOverLabel = SKLabelNode(fileNamed: "Chalkduster")
            gameOverLabel.text =  "Game Over!"
            gameOverLabel?.position = CGPoint(x: 512, y: 384)
            addChild(gameOverLabel)
        }
    }

    @objc func createEnemy() {
        guard let enemy = possibleEnemies.randomElement() else {
            return
        }

        let  sprite = SKSpriteNode(imageNamed: enemy)
        sprite.position =  CGPoint(x: 1200, y: Int.random(in:  50...736))
        addChild(sprite)

        sprite.physicsBody = SKPhysicsBody(texture: sprite.texture!, size: sprite.size)
        sprite.physicsBody?.categoryBitMask = 1
        sprite.physicsBody?.velocity = CGVector(dx: -500, dy: 0)
        //物理ボディの角速度
        sprite.physicsBody?.angularVelocity = 5
        //ダンピング(阻尼)係数
        sprite.physicsBody?.linearDamping = 0
        sprite.physicsBody?.angularDamping = 0
    }
    override func touchesMoved( touches: Set<UITouch>, with event: UIEvent?) {
        guard let touch = touches.first else {
            return
        }
        var location = touch.location(in: self)

        if location.y < 100 {
            location.y = 100
        }else if location.y > 668 {
            location.y = 668
        }

        player.position = location
    }

    func didBegin(_ contact: SKPhysicsContact) {
        let explosion = SKEmitterNode(fileNamed: "explosion")!
        explosion.position = player.position
        addChild(explosion)

        player.removeFromParent()

        isGameOver = true

    }
}

